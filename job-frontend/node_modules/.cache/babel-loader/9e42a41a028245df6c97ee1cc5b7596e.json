{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SK SUKLA\\\\Desktop\\\\JOB PORTAL APP\\\\Online Job Portal\\\\job-frontend\\\\src\\\\PostJob.js\",\n    _s = $RefreshSig$();\n\n// PostJob.js \nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './PostJob.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostJob = () => {\n  _s();\n\n  const [title, setTitle] = useState(\"\");\n  const [company, setCompany] = useState(\"\");\n  const [location, setLocation] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [salary, setSalary] = useState(\"\");\n  const [jobs, setJobs] = useState([]);\n\n  const handleOnSubmit = async e => {\n    e.preventDefault(); // Check if any of the fields are empty\n\n    if (!title || !company || !location || !description || !salary) {\n      toast.error('Please filled all fields to post a job.');\n      return;\n    }\n\n    try {\n      const response = await axios.post('http://localhost:3001/api/jobs', {\n        title,\n        company,\n        location,\n        description,\n        salary\n      });\n\n      if (response.status === 201) {\n        toast.success('Job added successfully!');\n        setTitle(\"\");\n        setCompany(\"\");\n        setLocation(\"\");\n        setDescription(\"\");\n        setSalary(\"\"); // Fetch the updated list of jobs\n\n        axios.get('http://localhost:3001/api/jobs').then(response => setJobs(response.data)).catch(err => console.log(err));\n      }\n    } catch (error) {\n      console.error('Error adding job:', error);\n      toast.error('Failed to add job. Please try again.');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Job Search Portal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"/\",\n            children: \"Home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#\",\n            children: \"Post_Job\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleOnSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Title:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Job title\",\n          value: title,\n          onChange: e => setTitle(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Company:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Company Name...\",\n          value: company,\n          onChange: e => setCompany(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Location:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Company Location...\",\n          value: location,\n          onChange: e => setLocation(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Description:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Description...\",\n          value: description,\n          onChange: e => setDescription(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Salary:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          placeholder: \"salary...\",\n          value: salary,\n          onChange: e => setSalary(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PostJob, \"JSOx3SgCDoDKgm8eWF8fMusCpXY=\");\n\n_c = PostJob;\nexport default PostJob;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostJob\");","map":{"version":3,"sources":["C:/Users/SK SUKLA/Desktop/JOB PORTAL APP/Online Job Portal/job-frontend/src/PostJob.js"],"names":["React","useState","axios","toast","PostJob","title","setTitle","company","setCompany","location","setLocation","description","setDescription","salary","setSalary","jobs","setJobs","handleOnSubmit","e","preventDefault","error","response","post","status","success","get","then","data","catch","err","console","log","target","value"],"mappings":"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","sourcesContent":["// PostJob.js \r\n\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport './PostJob.css';\r\n\r\n\r\nconst PostJob = () => {\r\n    const [title, setTitle] = useState(\"\");\r\n    const [company, setCompany] = useState(\"\");\r\n    const [location, setLocation] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    const [salary, setSalary] = useState(\"\");\r\n    const [jobs, setJobs] = useState([]);\r\n\r\n    const handleOnSubmit = async (e) => {\r\n        e.preventDefault();\r\n        \r\n        // Check if any of the fields are empty\r\n        if (!title || !company ||\r\n            !location || !description\r\n            || !salary) {\r\n            toast.error('Please filled all fields to post a job.');\r\n            return;\r\n        }\r\n        try {\r\n            const response = await axios.post(\r\n                'http://localhost:3001/api/jobs',\r\n                { title, company, location, description, salary }\r\n            );\r\n            if (response.status === 201) {\r\n                toast.success('Job added successfully!');\r\n                setTitle(\"\");\r\n                setCompany(\"\");\r\n                setLocation(\"\");\r\n                setDescription(\"\");\r\n                setSalary(\"\");\r\n\r\n                // Fetch the updated list of jobs\r\n                axios.get('http://localhost:3001/api/jobs')\r\n                    .then(response => setJobs(response.data))\r\n                    .catch(err => console.log(err));\r\n            }\r\n        } catch (error) {\r\n            console.error('Error adding job:', error);\r\n            toast.error('Failed to add job. Please try again.');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <header>\r\n                <h1>Job Search Portal</h1>\r\n            </header>\r\n            <nav>\r\n                <ul>\r\n                    <li><a href=\"/\">Home</a></li>\r\n                    <li><a href=\"#\">Post_Job</a></li>\r\n                </ul>\r\n            </nav>\r\n            <form onSubmit={handleOnSubmit}>\r\n                <div>\r\n                    <label>Title:</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Job title\"\r\n                        value={title}\r\n                        onChange={(e) => setTitle(e.target.value)} />\r\n                </div>\r\n                <div>\r\n                    <label>Company:</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Company Name...\"\r\n                        value={company}\r\n                        onChange={\r\n                            (e) => setCompany(e.target.value)} />\r\n                </div>\r\n                <div>\r\n                    <label>Location:</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Company Location...\"\r\n                        value={location}\r\n                        onChange={\r\n                            (e) => setLocation(e.target.value)} />\r\n                </div>\r\n                <div>\r\n                    <label>Description:</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Description...\"\r\n                        value={description}\r\n                        onChange={\r\n                            (e) => setDescription(e.target.value)} />\r\n                </div>\r\n                <div>\r\n                    <label>Salary:</label>\r\n                    <input\r\n                        type=\"number\"\r\n                        placeholder=\"salary...\"\r\n                        value={salary}\r\n                        onChange={(e) => setSalary(e.target.value)} />\r\n                </div>\r\n                <button type=\"submit\">Submit</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PostJob;\r\n"]},"metadata":{},"sourceType":"module"}